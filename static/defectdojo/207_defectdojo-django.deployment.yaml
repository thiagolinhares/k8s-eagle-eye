---
# Source: defectdojo/templates/django-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: defectdojo-django
  labels:
    defectdojo.org/component: django
    app.kubernetes.io/name: defectdojo
    app.kubernetes.io/instance: defectdojo
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: defectdojo-1.6.82
spec:
  replicas: 1
  selector:
    matchLabels:
      defectdojo.org/component: django
      app.kubernetes.io/name: defectdojo
      app.kubernetes.io/instance: defectdojo
  template:
    metadata:
      labels:
        defectdojo.org/component: django
        app.kubernetes.io/name: defectdojo
        app.kubernetes.io/instance: defectdojo        
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9113"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
        checksum/config: 15d0a45898c24a25499b006795e97f77e3f07c8abbefdb08a917ff7d2ff26575
        checksum/secret: 312cb526e21ed11843bbb2d834ed5bb9101a1fab5813ec1a4cc3b822850f1624
        checksum/esecret: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      serviceAccountName: defectdojo
      securityContext:
        fsGroup: 1001
      volumes:
      - name: run
        emptyDir: {}
      - name: media
        emptyDir: {}
      containers:
      - name: metrics
        image: nginx/nginx-prometheus-exporter:0.11.0
        imagePullPolicy: IfNotPresent
        command: [ '/usr/bin/nginx-prometheus-exporter', '-nginx.scrape-uri', 'http://127.0.0.1:8080/nginx_status']
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9113
          periodSeconds: 20
          initialDelaySeconds: 15
          timeoutSeconds: 5
      - name: uwsgi
        image: 'defectdojo/defectdojo-django:latest'
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1001
        volumeMounts:
        - name: run
          mountPath: /run/defectdojo
        - name: media
          mountPath: "/app/media"
        ports:
        - name: http
          protocol: TCP
          containerPort: 8081
        envFrom:
        - configMapRef:
            name: defectdojo
        - secretRef:
            name: defectdojo-extrasecrets
            optional: true
        env:
        - name: DD_CELERY_BROKER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo-redis-specific
              key: redis-password
        - name: DD_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
                name: defectdojo-mysql-specific
                key: mysql-password
        - name: DD_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_SECRET_KEY
        - name: DD_CREDENTIAL_AES_256_KEY
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: DD_CREDENTIAL_AES_256_KEY
        - name: DD_SESSION_COOKIE_SECURE
          value: "True"
        - name: DD_CSRF_COOKIE_SECURE
          value: "True"
        livenessProbe:
          httpGet:
            path: /login?force_login_form&next=/
            port: http
            httpHeaders:
            - name: Host
              value: 127.0.0.1
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
      - name: nginx
        image: 'defectdojo/defectdojo-nginx:latest'
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1001
        volumeMounts:
        - name: run
          mountPath: /run/defectdojo
        - name: media
          mountPath: /usr/share/nginx/html/media
        ports:
        - name: http
          protocol: TCP
          containerPort: 8080
        envFrom:
        - configMapRef:
            name: defectdojo
        env:
        - name: METRICS_HTTP_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: defectdojo
              key: METRICS_HTTP_AUTH_PASSWORD
        - name: USE_TLS
          value: 'false'
        - name: GENERATE_TLS_CERTIFICATE
          value: 'false'
        livenessProbe:
          httpGet:
            path: /nginx_health
            port: http
            httpHeaders:
            - name: Host
              value: 127.0.0.1
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /uwsgi_health
            port: http
            httpHeaders:
            - name: Host
              value: 127.0.0.1
          failureThreshold: 6
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2000m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
